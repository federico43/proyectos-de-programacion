#include <iostream>
#include <cstdlib>
#include <vector>
#include <iomanip>
using namespace std;

//Estructura para organizar informacion del vector aleatorio
struct resultados{
int max_valor;
int size_array;
int *int_array;
};

//Declaraciones de funciones
resultados generarVectorAleatorio();
int menu();
void generarHistograma(resultados arg_generar);

int main() {

  int x = menu();
  
  switch(x)
  {
    case 0:
      return 0;
    case 1:
      {
        resultados valores_principales = generarVectorAleatorio();
      
        //Imprimiendo los elementos e informacion de "valores_principales".
        cout << "size of the array: " << valores_principales.size_array << endl;
        cout << "valor maximo: "      << valores_principales.max_valor <<endl;
        cout << "valores Aleatorios: ";
        //Bucle que imprime cada valor aleatorio
        for(int i = 0 ; i< valores_principales.size_array;i++)
          cout << valores_principales.int_array[i] << " ";
        return 0;
      }  
    case 2:
      resultados valores_principales = generarVectorAleatorio();
      generarHistograma(valores_principales); 
  };
    
 
};
 
  
//************* funciones *****************
//*****************************************
//Descripcion: imprime las diferentes opciones disponibles, retorna la respuesta de usuario.
int menu(){
  
  int seleccion;
  cout << "*********************************" << endl;
  cout << "**********taller_2***************" << endl;
  cout << endl;
  cout << "0. salir del programa"<< endl;
  cout << "1. Crear vector aleatorio con numeros  del 1 al 9 de tamaño n" 
       << endl;
  cout << "2. Generar matriz de histograma"<<endl;
  cin >> seleccion;
  return seleccion;
}

//Descripcion: pregunta al usuario la cantidad de valores aleatorios a generar, crea la cantidad pedida, retorna un struct que contiene el valor mas grande de la serie, el array de valores aleatorios y el tamaño de este.
resultados generarVectorAleatorio()
{
  //Se usa 'srand()' para darle una seed a la funcion rand(), esta ultima genera los numeros aleatorios.
  srand(time(0));
  //Se incializan las variables q finalmente se retornaran en un struct 
  int size_array; // -> tamaño del array
  int max_valor; // -> Valor mas grande encontrado en el array
  
  //se le pregunta al usario cuantos valores aleatorios quiere generar, respectivamente se crea un array del tamañano indicado.
  cout << "Cuantos valores aleatorios quiere generar?"<<endl;
  cin >> size_array; 
  // se crea un puntero 'array', este apunta al array de valores aleatorios.
  // se usa 'new' para que el array creado se pueda usar despues de que se haya terminado de ejecutar la funcion.
  int *array = new int[size_array];
  //se generan los valores aleatorios usando rand() en un bucle.
  cout << endl;
  for(int i = 0; i < size_array;i++){
    array[i] = rand()%20; 
    cout<< array[i] << endl;
  }
  
  //Se encuentra cual es el valor mas grande en el array de valores aleatorios: se inicializa "max_valor" a ser igual al primer valor del array, respectivamente se compara el valor guardado en la variable con el resto del array, actualizando "max_valor" al encontrar un numero mas grande.
  max_valor = array[0];
  for(int i = 0;i<size_array;i++){
    if (max_valor<array[i])
      max_valor = array[i];
  };


  //Se crea una variable tipo "resultados" llamada "valores_principales" para retornar los valores esperados.
  resultados valores_principales;
  valores_principales.int_array = array;
  valores_principales.max_valor = max_valor;
  valores_principales.size_array = size_array;
  return valores_principales;
};

void generarHistograma(resultados valores_principales){
  // se incian variables.
  int frecuencia; // -> Frecuencia de cada valor en el array.
  vector<int> valores; // -> guarda los valores unicos encontrados en el array
  vector<int> histograma; // -> Freucuencia de todos los valores del array.
  int vector_sizes = 0; //-> tamaño de los dos vectores anteriores
  
  //Se recorre cada valor del array
  for(int i = 0; i< valores_principales.size_array; i++)
    {
      //si el valor es igual a -1, no se analiza 
      if (*(valores_principales.int_array+i) != -1)
        {
          //Si el valor es diferente a -1 se añade un espacio a  vectores para guardar el valor aleatorio y su frecuencia
          ++vector_sizes;
          valores.resize(vector_sizes);
          histograma.resize(vector_sizes);       
          frecuencia=1;
          
          //Se guarda el valor que se analizara
          valores[vector_sizes-1] = *(valores_principales.int_array+i);
          cout << endl;
         // bucle recorre el array desde el valor que se esta analizando hasta el final de este. Al encontrar un valor igual 'frecuencia' amuenta 1
          for(int j = i+1; j < valores_principales.size_array; j++)
          {
            if( *(valores_principales.int_array+i)
                              ==       
                *(valores_principales.int_array+j))
              {
                ++frecuencia;
                //valores ya contados se igaulan a -1
                *(valores_principales.int_array+j) = -1;
              }
          };
          //Se guarda en el vector histograma la frecunecia del valor i del array
          histograma[vector_sizes-1] = frecuencia;
        }
     
      
    }
   // se imprime el index, valor y frecuencia de cada valor
  cout << right << setw(10) << "INDEX" 
       << right << setw(10) << "VALUE" 
       << right << setw(15) << "HISTOGRAMA"  << endl;

  for(int i = 0; i < vector_sizes; i++) 
    {
      
      cout << right << setw(10) << i  
           << right << setw(10) << valores[i]
           << right << setw(10);
      
      for(int l=0;l<histograma[i];l++)
        {
          cout << "*";
        }
      cout << endl;
        
    };
};
